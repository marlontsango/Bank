// <auto-generated />
using System;
using Bank.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20220208144859_premiere")]
    partial class premiere
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bank.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adresse")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("date_naissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nom_client")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("prenom_client")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("telephone")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Bank.Models.Compte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_ouverture")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("intitule_compte")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("numero_compte")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("solde")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("TypeId");

                    b.ToTable("compte");
                });

            modelBuilder.Entity("Bank.Models.Retrait", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_retrait")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("montant_retrait")
                        .HasColumnType("int");

                    b.Property<string>("motif_retrait")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.ToTable("retrait");
                });

            modelBuilder.Entity("Bank.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("montant_max")
                        .HasColumnType("int");

                    b.Property<string>("nom_type")
                        .HasColumnType("longtext");

                    b.Property<int>("solde_min")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("type");
                });

            modelBuilder.Entity("Bank.Models.Versement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_versement")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("montant_versement")
                        .HasColumnType("int");

                    b.Property<string>("motif")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.ToTable("versement");
                });

            modelBuilder.Entity("Bank.Models.Virement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateVirement")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("montant_virement")
                        .HasColumnType("int");

                    b.Property<string>("motif_virement")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CompteId");

                    b.ToTable("virement");
                });

            modelBuilder.Entity("Bank.Models.Compte", b =>
                {
                    b.HasOne("Bank.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bank.Models.Type", "type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("type");
                });

            modelBuilder.Entity("Bank.Models.Retrait", b =>
                {
                    b.HasOne("Bank.Models.Compte", "compte")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compte");
                });

            modelBuilder.Entity("Bank.Models.Versement", b =>
                {
                    b.HasOne("Bank.Models.Compte", "compte")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compte");
                });

            modelBuilder.Entity("Bank.Models.Virement", b =>
                {
                    b.HasOne("Bank.Models.Compte", "compte")
                        .WithMany()
                        .HasForeignKey("CompteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compte");
                });
#pragma warning restore 612, 618
        }
    }
}
